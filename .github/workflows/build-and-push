name: Build and push the latest Docker image

on:
  workflow_call:
    inputs:
      docker_context:
        type: string
      dockerfile_path:
        type: string
      tag_suffix: 
        required: true
        type: string
      platform:
        required: true
        type: string
    secrets:
      docker_username:
        required: true
      docker_password:
        required: true
      docker_repository:
        required: true

jobs:

  build-and-push-docker-image:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}
      
      - name: Get the Docker context
        id: getdockercontext
        run: |
          DOCKERCONTEXT=.
          if [ ! -z "${{ inputs.docker_context }}" ]
          then
            DOCKERCONTEXT=${{ inputs.docker_context }}
          fi
          echo ::set-output name=dockercontext::${DOCKERCONTEXT}

      - name: Get the Dockerfile
        id: getdockerfile
        run: |
          DOCKERFILE=./Dockerfile
          if [ ! -z "${{ inputs.dockerfile_path }}" ]
          then
            DOCKERFILE=${{ inputs.dockerfile_path }}
          fi
          echo ::set-output name=dockerfile::${DOCKERFILE}

      - name: Get the tag
        id: gettag
        run: |
          VERSION=latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          fi
          TAG=${VERSION}-${{ inputs.tag_suffix }}
          echo ::set-output name=tag::${TAG}
      
      - name: Get the metadata
        id: getmetadata
        run: |
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ steps.getdockercontext.outputs.dockercontext }}
          file: ${{ steps.getdockerfile.outputs.dockerfile }}
          platforms: ${{ inputs.platform }}
          push: true
          cache-from: type=registry,ref=${{ secrets.docker_repository }}:${{ steps.gettag.outputs.tag }}
          cache-to: type=inline
          tags: ${{ secrets.docker_repository }}:${{ steps.gettag.outputs.tag }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.getmetadata.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
